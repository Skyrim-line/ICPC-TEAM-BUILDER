# 这是一个用于ESLint检查的工作流

name: Lint Check

# 控制何时运行工作流
on:
  # 在推送或PR发生时触发，但仅限于 "main" 分支
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  # 允许在Actions界面手动触发
  workflow_dispatch:

# 定义前端和后端的检查任务
jobs:

  # 前端模块依赖检查任务
  frontend-lint:
    runs-on: ubuntu-latest
    steps:
      # 检出代码库
      - uses: actions/checkout@v4

      # 设置 Node.js 环境
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18.x'  # 符合你的 React 18 环境

      # 安装前端依赖
      - name: Install Frontend Dependencies
        working-directory: ./frontend
        run: npm install

      # 运行 ESLint 检查
      - name: Run ESLint
        working-directory: ./frontend
        run: npm run lint


  # 后端 Go 模块 Lint 检查任务
  backend-lint:
    runs-on: ubuntu-latest
    steps:
      # 检出代码库
      - uses: actions/checkout@v4
  
      # 设置 Go 环境
      - name: Setup Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.22.x'
  
      # 下载 Go 依赖包
      - name: Download Dependencies
        working-directory: ./backend
        run: go mod download
  
      # 安装 golangci-lint
      - name: Install golangci-lint
        run: |
          curl -sSfL https://raw.githubusercontent.com/golangci/golangci-lint/master/install.sh | sh -s -- -b $(go env GOPATH)/bin v1.54.2
  
      # 运行 golangci-lint 进行 Lint 检查，设置超时时间为5分钟
      - name: Run Go Linter
        working-directory: ./backend
        run: golangci-lint run ./... --timeout=5m
