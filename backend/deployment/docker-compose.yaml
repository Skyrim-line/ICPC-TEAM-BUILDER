services:
  redis:
    image: redis:7.4.0-alpine
    restart: always
#    ports:
#      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 5s

  postgres:
    image: postgres:14.0
    restart: always
    cap_drop:
      - NET_RAW
    logging:
      driver: "json-file"
      options:
        max-size: "200M"
    stop_grace_period: 30s
    environment:
      POSTGRES_USERNAME: postgres
      POSTGRES_HOST_AUTH_METHOD: trust
      POSTGRES_DB: devdb
      TZ: Australia/Sydney
    volumes:
      - "./data/:/var/lib/postgresql/data/"
      - "./initdb.d/:/docker-entrypoint-initdb.d/"
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 15s

  rabbitmq:
    image: rabbitmq:4-alpine
    restart: always
#    ports:
#      - "5672:5672"
#      - "15672:15672"
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    healthcheck:
      test: ["CMD", "rabbitmqctl", "status"]
      interval: 20s
      timeout: 5s
      retries: 10
      start_period: 30s
    deploy:
      resources:
        limits:
          cpus: "0.8"

  mailer:
    image: {{REPO}}/{{MAILER_IMG}}:{{GitTag}}
    depends_on:
      redis:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    volumes:
      - "./mailer.toml:/app/mailer.toml"
    command: [ "/app/icpc_tb_mailer", "-f", "/app/mailer.toml" ]

  matcher:
    image: {{REPO}}/{{MATCHER_IMG}}:{{GitTag}}
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - "./matcher.toml:/app/matcher.toml"
    command: [ "/app/icpc_tb_matcher", "-f", "/app/matcher.toml" ]

  server:
    image: {{REPO}}/{{SERVER_IMG}}:{{GitTag}}
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
      mailer:
        condition: service_started
      matcher:
        condition: service_started
    volumes:
      - "./server.toml:/app/server.toml"
    command: [ "/app/icpc_tb_server", "-f", "/app/server.toml" ]
    ports:
      - "8088:8080"
